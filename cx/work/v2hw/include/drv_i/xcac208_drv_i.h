#ifndef __XCAC208_DRV_I_H
#define __XCAC208_DRV_I_H


#include "drv_i/cankoz_common_drv_i.h"


// w20,w8,r8,w1,r1,r12,r24,w16,r8
enum
{
    /*** Config channels ********************************************/
    XCAC208_CONFIG_CHAN_BASE     = 0,  /* This is crucial for driver code! */
    XCAC208_CONFIG_CHAN_COUNT    = 20,

    XCAC208_CHAN_DO_RESET        = XCAC208_CONFIG_CHAN_BASE + 0,
    XCAC208_CHAN_ADC_MODE        = XCAC208_CONFIG_CHAN_BASE + 1,
    XCAC208_CHAN_ADC_BEG         = XCAC208_CONFIG_CHAN_BASE + 2,
    XCAC208_CHAN_ADC_END         = XCAC208_CONFIG_CHAN_BASE + 3,
    XCAC208_CHAN_ADC_TIMECODE    = XCAC208_CONFIG_CHAN_BASE + 4,
    XCAC208_CHAN_ADC_GAIN        = XCAC208_CONFIG_CHAN_BASE + 5,
    XCAC208_CHAN_RESERVED6       = XCAC208_CONFIG_CHAN_BASE + 6,
    XCAC208_CHAN_RESERVED7       = XCAC208_CONFIG_CHAN_BASE + 7,
    XCAC208_CHAN_RESERVED8       = XCAC208_CONFIG_CHAN_BASE + 8,
    XCAC208_CHAN_OUT_MODE        = XCAC208_CONFIG_CHAN_BASE + 9,

    XCAC208_CHAN_DO_TAB_DROP     = XCAC208_CONFIG_CHAN_BASE + 10,
    XCAC208_CHAN_DO_TAB_ACTIVATE = XCAC208_CONFIG_CHAN_BASE + 11,
    XCAC208_CHAN_DO_TAB_START    = XCAC208_CONFIG_CHAN_BASE + 12,
    XCAC208_CHAN_DO_TAB_STOP     = XCAC208_CONFIG_CHAN_BASE + 13,
    XCAC208_CHAN_DO_TAB_PAUSE    = XCAC208_CONFIG_CHAN_BASE + 14,
    XCAC208_CHAN_DO_TAB_RESUME   = XCAC208_CONFIG_CHAN_BASE + 15,
      XCAC208_CHAN_DO_TAB_BASE = XCAC208_CHAN_DO_TAB_DROP,
      XCAC208_CHAN_DO_TAB_CNT  = XCAC208_CHAN_DO_TAB_RESUME - XCAC208_CHAN_DO_TAB_BASE + 1,

    XCAC208_CHAN_DO_CALIBRATE    = XCAC208_CONFIG_CHAN_BASE + 16,
    XCAC208_CHAN_DIGCORR_MODE    = XCAC208_CONFIG_CHAN_BASE + 17,
    XCAC208_CHAN_DIGCORR_V       = XCAC208_CONFIG_CHAN_BASE + 18,
    XCAC208_CHAN_RESERVED19      = XCAC208_CONFIG_CHAN_BASE + 19,

    /*** I/O registers **********************************************/
    XCAC208_CHAN_REGS_BASE       = 20,
    XCAC208_CHAN_REGS_WR8_BASE   = XCAC208_CHAN_REGS_BASE + CANKOZ_REGS_WR8_BOFS,
    XCAC208_CHAN_REGS_RD8_BASE   = XCAC208_CHAN_REGS_BASE + CANKOZ_REGS_RD8_BOFS,
    XCAC208_CHAN_REGS_WR1        = XCAC208_CHAN_REGS_BASE + CANKOZ_REGS_WR1_OFS,
    XCAC208_CHAN_REGS_RD1        = XCAC208_CHAN_REGS_BASE + CANKOZ_REGS_RD1_OFS,
    XCAC208_CHAN_REGS_LAST       = XCAC208_CHAN_REGS_BASE + CANKOZ_REGS_NUMCHANS -1,

    XCAC208_CHAN_REGS_RSVD_B     = XCAC208_CHAN_REGS_BASE + CANKOZ_REGS_NUMCHANS,
    XCAC208_CHAN_REGS_RSVD_E     = 49,

    /* Regular ADC/DAC channels *************************************/
    XCAC208_CHAN_ADC_n_BASE      = 50, XCAC208_CHAN_ADC_n_COUNT = 24,
    XCAC208_CHAN_OUT_n_BASE      = 74, XCAC208_CHAN_OUT_n_COUNT = 8,
    XCAC208_CHAN_OUT_RATE_n_BASE = 82,
    XCAC208_CHAN_OUT_CUR_n_BASE  = 90,

    XCAC208_NUMCHANS             = XCAC208_CHAN_OUT_CUR_n_BASE + XCAC208_CHAN_OUT_n_COUNT
};

enum
{
    XCAC208_CHAN_ADC_P10V = XCAC208_CHAN_ADC_n_BASE + XCAC208_CHAN_ADC_n_COUNT - 4,
    XCAC208_CHAN_ADC_0V   = XCAC208_CHAN_ADC_n_BASE + XCAC208_CHAN_ADC_n_COUNT - 3,
    XCAC208_CHAN_ADC_T    = XCAC208_CHAN_ADC_n_BASE + XCAC208_CHAN_ADC_n_COUNT - 2,
    XCAC208_CHAN_ADC_PWR  = XCAC208_CHAN_ADC_n_BASE + XCAC208_CHAN_ADC_n_COUNT - 1,
};

// 8*1+58i/1+58i,1*1+261i/1+261i
enum
{
    XCAC208_BIGC_ITAB_n_BASE = 0, // Individual per-channel tables
    XCAC208_BIGC_TAB_WHOLE   = 8, // Whole-channels table -- =XCAC208_BIGC_ITABLE_n_BASE+XCAC208_CHAN_OUT_n_COUNT

    XCAC208_NUM_BIGCS          = 9
};

enum
{
    XCAC208_ADC_MODE_NORM   = 0,
    XCAC208_ADC_MODE_OSCILL = 1,
    XCAC208_ADC_MODE_PLOT   = 2,
    XCAC208_ADC_MODE_TBACK  = 3,
};

enum
{
    XCAC208_OUT_MODE_NORM   = 0,
    XCAC208_OUT_MODE_TABLE  = 1,
};

enum
{
    XCAC208_VAL_DISABLE_TABLE_CHAN = 20*1000*1000,  // 20V or higher -- disable channel

};


#endif /* __XCAC208_DRV_I_H */
