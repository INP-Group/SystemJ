#ifndef PHYSINFO_ARRAY_NAME
  #error Please supply the name for physinfo[] array via "#define PHYSINFO_ARRAY_NAME NAME"
#endif


#ifndef __PI_LINAC1_31_H
#define __PI_LINAC1_31_H

#include "magx_macros.h"


enum
{
    B_OLDVCH300_ADC1 = 0,
    B_OLDVCH300_DAC1 = 300,
    B_OLDVCH300_ADC2 = 600,
    B_OLDVCH300_DAC2 = 900,
    ///
    B_NEWVCH300_ADC1 = 1200,
    B_NEWVCH300_DAC1 = 1500,
    B_NEWVCH300_ADC2 = 1800,
    B_NEWVCH300_DAC2 = 2100,
    B_NEWVCH300_V3HS = 2400,
    ///
    B_XOR4016        = 2720,
    ///
    B_V1PKS          = 4520,
    B_V1ADC          = 4536,
    ///
    B_IST_ICD20      = 4600,
    B_IST_IST        = 7600,
    ///
    B_FED208         = 8600,
};

enum
{
    CSET_Lens1     = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1+ 0,  CMES_Lens1     = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1+ 1,
    CSET_Lens2     = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1+ 1,  CMES_Lens2     = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1+ 4,
    CSET_Lens3     = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1+ 2,  CMES_Lens3     = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1+ 7,
    CSET_Lens4     = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2+ 0,  CMES_Lens4     = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2+ 0,
    CSET_Lens5     = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2+ 1,  CMES_Lens5     = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2+ 1,
    CSET_Lens6n7   = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1+ 3,  CMES_Lens6n7   = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1+10,
    CSET_Lens8n9   = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1+ 4,  CMES_Lens8n9   = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1+13,
    CSET_Lens10    = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1+ 5,  CMES_Lens10    = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1+32,
    CSET_Lens11    = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1+ 6,  CMES_Lens11    = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1+35,
    CSET_Lens12    = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2+ 8,  CMES_Lens12    = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2+30,
    CSET_Lens13    = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2+ 9,  CMES_Lens13    = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2+28,
    CSET_Lens14    = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2+10,  CMES_Lens14    = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2+26,
    CSET_LensB1    = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2+ 5,  CMES_LensB1    = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2+32,
    CSET_LensB3n4  = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2+ 6,  CMES_LensB3n4  = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2+35,
    CSET_LensB2n5  = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2+ 7,  CMES_LensB2n5  = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2+38,
    CSET_Separator = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2+ 4,  CMES_Separator = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2+13,
    CSET_TrPosL2   = XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1+ 7,  CMES_TrPosL2   = XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1+38,
};

#endif /* __PI_LINAC1_31_H */


static physprops_t PHYSINFO_ARRAY_NAME[] =
{
//////////////////////////////////////////////////////////////////////
#define NMGS_ADC_R (10000000/10.0)
#define NMGS_DAC_R (10000000/10.0)

    {  0+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    {  1+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    {  2+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    {  3+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    {  4+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    {  5+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    {  6+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    {  7+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    {  8+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    {  9+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 10+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 11+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 12+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 13+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 14+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 15+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 16+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 17+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 18+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 19+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 20+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 21+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 22+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 23+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 24+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 25+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 26+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 27+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 28+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 29+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 30+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 31+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 32+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 33+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 34+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 35+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 36+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 37+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 38+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},
    { 39+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC1, NMGS_ADC_R*(8.0/300), 0},

    {  0+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    {  1+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    {  2+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    {  3+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    {  4+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    {  5+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    {  6+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    {  7+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    {  8+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    {  9+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    { 10+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    { 11+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    { 12+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    { 13+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    { 14+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},
    { 15+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC1, NMGS_DAC_R*(8.0/300), 0, 305},

    {  0+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(1.0/3.9)/*(8.0/300)*/, 0},
    {  1+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(1.0/3.9)/*(8.0/300)*/, 0},
    {  2+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    {  3+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    {  4+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    {  5+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    {  6+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    {  7+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    {  8+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    {  9+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 10+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 11+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 12+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 13+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 14+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 15+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 16+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 17+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 18+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 19+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 20+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 21+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 22+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 23+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 24+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 25+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*1.0/12.97, 0},  /*3-2:1*/
    { 26+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*1.0/12.50/1.035, 0},  /*3-2:2*/
    { 27+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*1.0/12.95, 0},  /*3-1:1*/
    { 28+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*1.0/12.49/1.040, 0},  /*3-1:2*/
    { 29+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*1.0/12.93, 0},  /*3-0:1*/
    { 30+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*1.0/12.47/1.042, 0},  /*3-0:2*/
    { 31+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 32+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 33+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 34+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 35+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 36+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 37+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 38+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},
    { 39+XCANADC40_CHAN_ADC_n_base+B_OLDVCH300_ADC2, NMGS_ADC_R*(8.0/300), 0},

    {  0+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*(1.0/3.9)/*(8.0/300)*/, 0, 305},
    {  1+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*(1.0/3.9)/*(8.0/300)*/, 0, 305},
    {  2+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*(8.0/300), 0, 305},
    {  3+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*(8.0/300), 0, 305},
    {  4+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*(8.0/300), 0, 305},
    {  5+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*(8.0/300), 0, 305},
    {  6+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*(8.0/300), 0, 305},
    {  7+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*(8.0/300), 0, 305},
    {  8+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*1.0/12.92*1.030, 0, 305}, /*3-0:0*/
    {  9+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*1.0/12.96*1.034, 0, 305}, /*3-1:0*/
    { 10+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*1.0/12.96*1.039, 0, 305},  /*3-2:0*/
    { 11+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*(8.0/300), 0, 305},
    { 12+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*(8.0/300), 0, 305},
    { 13+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*(8.0/300), 0, 305},
    { 14+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*(8.0/300), 0, 305},
    { 15+XCANDAC16_CHAN_OUT_n_base+B_OLDVCH300_DAC2, NMGS_DAC_R*(8.0/300), 0, 305},

    MAGX_XCH300_PHYSLINES(B_NEWVCH300_ADC1, B_NEWVCH300_DAC1, B_NEWVCH300_V3HS + V3H_XA40D16_NUMCHANS * 0),
    MAGX_XCH300_PHYSLINES(B_NEWVCH300_ADC2, B_NEWVCH300_DAC2, B_NEWVCH300_V3HS + V3H_XA40D16_NUMCHANS * 8),

//////////////////////////////////////////////////////////////////////
// v1000
    {B_V1PKS + 0, (11732.0/236.0), 0},
    {B_V1PKS + 1, (11732/236.0), 0},
    {B_V1PKS + 2, (11732/236.0), 0},
    {B_V1PKS + 3, (11732/236.0), 0},
    {B_V1PKS + 4, (020000/336.0), 0},
    {B_V1PKS + 5, (015000/273.0), 0},
    {B_V1PKS + 6, (020000/(-1344.27)), 0},
    {B_V1PKS + 7, (020000/336.0), 0},
    {B_V1PKS + 8, (012200/(-1030.0)*1.046*1.002), 0},
    {B_V1PKS + 9, (012200/(-1030.0)), 0},
    {B_V1PKS + 10, 1, 0},
    {B_V1PKS + 11, 1, 0},
    {B_V1PKS + 12, 1, 0},
    {B_V1PKS + 13, 1, 0},
    {B_V1PKS + 14, 1, 0},
    {B_V1PKS + 15, 1, 0},

  {B_V1ADC + 0,  1000.0*7.0, 0},
  {B_V1ADC + 1,  1000.0*7.0, 0},
  {B_V1ADC + 2,  1000.0*7.0, 0},
  {B_V1ADC + 3,  1000.0*7.0, 0},
  {B_V1ADC + 4,  1000.0*7.0, 0},
  {B_V1ADC + 5,  1000.0*7.0, 0},
  {B_V1ADC + 6,  1000.0*7.0, 0},
  {B_V1ADC + 7,  1000.0*7.0, 0},
  {B_V1ADC + 8,  1000.0*7.0, 0},
  {B_V1ADC + 9,  1000.0*7.0, 0},
  {B_V1ADC + 10, 1000.0*7.0, 0},
  {B_V1ADC + 11, 1000.0*7.0, 0},
  {B_V1ADC + 12, 1000.0*7.0, 0},
  {B_V1ADC + 13, 1000.0*7.0, 0},
  {B_V1ADC + 14, 1000.0*7.0, 0},
  {B_V1ADC + 15, 1000.0*5.3, 0},
  {B_V1ADC + 16, 1000.0*5.3, 0},
  {B_V1ADC + 17, 1000.0*5.3, 0},
  {B_V1ADC + 18, 1000.0*5.3, 0},
  {B_V1ADC + 19, 1000.0*5.3, 0},
  {B_V1ADC + 20, 1000.0*3.5, 0},
  {B_V1ADC + 21, 1000.0*3.5, 0},
  {B_V1ADC + 22, 1000.0*3.5, 0},
  {B_V1ADC + 23, 1000.0*3.5, 0},
  {B_V1ADC + 24, 1000.0*3.5, 0},
  {B_V1ADC + 25, 1000.0*3.5, 0},
  {B_V1ADC + 26, 1000.0*3.5, 0},
  {B_V1ADC + 27, 1000.0*3.5, 0},
  {B_V1ADC + 28, 1000.0*3.5, 0},
  {B_V1ADC + 29, 1000.0*3.5, 0},
  {B_V1ADC + 30, 1000.0*0.83*(-1/0.96), 0},
  {B_V1ADC + 31, 1000.0*0.83, 0},
  {B_V1ADC + 32, 1000.0*0.83, 0},
  {B_V1ADC + 33, 1000.0*0.83, 0},
  {B_V1ADC + 34, 1000.0*0.83, 0},
  {B_V1ADC + 35, 1000.0*3.5, 0},
  {B_V1ADC + 36, 1000.0*3.5, 0},
  {B_V1ADC + 37, 1000.0*3.5, 0},
  {B_V1ADC + 38, 1000.0*3.5, 0},
  {B_V1ADC + 39, 1000.0*3.5, 0},
  {B_V1ADC + 40, 1000.0*(-1.5)/0.9425, 0},
  {B_V1ADC + 41, 1000.0*(-1.5), 0},
  {B_V1ADC + 42, 1000.0*(-1.5), 0},
  {B_V1ADC + 43, 1000.0*(-1.5), 0},
  {B_V1ADC + 44, 1000.0*(-1.5), 0},
  {B_V1ADC + 45, 1000.0*(-1.5), 0},
  {B_V1ADC + 46, 1000.0*(-1.5), 0},
  {B_V1ADC + 47, 1000.0*(-1.5), 0},
  {B_V1ADC + 48, 1000.0*(-1.5), 0},
  {B_V1ADC + 49, 1000.0*(-1.5), 0},

//////////////////////////////////////////////////////////////////////
#define XOR4016_PHYS(n) \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+0),  \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+1),  \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+2),  \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+3),  \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+4),  \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+5),  \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+6),  \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+7),  \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+8),  \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+9),  \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+10), \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+11), \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+12), \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+13), \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+14), \
    MAGX_XOR4016_PHYSLINES(B_XOR4016, (n)*16+15)
    
    XOR4016_PHYS(0),
    XOR4016_PHYS(1),
    XOR4016_PHYS(2),


#define IST_PHYS(n, coeff, d2m) \
    MAGX_IST_XCDAC20_PHYSLINES(B_IST_ICD20 + XCDAC20_NUMCHANS     * n, \
                               B_IST_IST   + IST_XCDAC20_NUMCHANS * n, \
                               coeff, (d2m))

    IST_PHYS(0, 1000000.0/250,  +1),
    IST_PHYS(1, 8000000.0/1000, +1),
    IST_PHYS(2, 1000000.0/250,  +1),
    IST_PHYS(3, 1000000.0/250,  +1),
    IST_PHYS(4, 1000000.0/250,  -1),
    IST_PHYS(5, 1000000.0/250,  +1),
    IST_PHYS(6, 1000000.0/250,  +1),
    IST_PHYS(7, 1000000.0/250,  +1),
    IST_PHYS(8, 1000000.0/250,  +1),
    IST_PHYS(9, 1000000.0/250,  +1),

    MAGX_COR208_PHYSLINES(B_FED208, 0),
    MAGX_COR208_PHYSLINES(B_FED208, 1),
    MAGX_COR208_PHYSLINES(B_FED208, 2),
    MAGX_COR208_PHYSLINES(B_FED208, 3),
    MAGX_COR208_PHYSLINES(B_FED208, 4),
    MAGX_COR208_PHYSLINES(B_FED208, 5),
    {B_FED208 + XCAC208_CHAN_ADC_n_BASE + 12, 1000000.0/3.01, 0, 305},
};
