    {EBC_BASE+SENKOV_EBC_CHAN_DAC_N_BASE+0, 5000/100.0},
    {EBC_BASE+SENKOV_EBC_CHAN_ADC_N_BASE+0, 5000/50.0},
    {EBC_BASE+SENKOV_EBC_CHAN_ADC_N_BASE+1, 5000/100.0},

    {C124_BASE + XCEAC124_CHAN_ADC_n_BASE +  0, 1000000.0/(1000./10), 0, 0},
    {C124_BASE + XCEAC124_CHAN_ADC_n_BASE +  1, 1000000.0/(1000./10), 0, 0},
    {C124_BASE + XCEAC124_CHAN_ADC_n_BASE +  2, 1000000.0/(1000./10), 0, 0},
    {C124_BASE + XCEAC124_CHAN_ADC_n_BASE +  3, 1000000.0/(1000./10), 0, 0},
    {C124_BASE + XCEAC124_CHAN_ADC_n_BASE +  4, 1000000.0/(1000./10), 0, 0},
    {C124_BASE + XCEAC124_CHAN_ADC_n_BASE +  5, 1000000.0/(1000./10), 0, 0},
    {C124_BASE + XCEAC124_CHAN_ADC_n_BASE +  6, 1000000.0/(1000./10), 0, 0},
    {C124_BASE + XCEAC124_CHAN_ADC_n_BASE +  7, 1000000.0/(1000./10), 0, 0},
    {C124_BASE + XCEAC124_CHAN_ADC_n_BASE +  8, 1000000.0/(1000./10), 0, 0},
    {C124_BASE + XCEAC124_CHAN_ADC_n_BASE +  9, 1000000.0/(1000./10), 0, 0},
    {C124_BASE + XCEAC124_CHAN_ADC_n_BASE + 10, 1000000.0/(1000./10), 0, 0},
    {C124_BASE + XCEAC124_CHAN_ADC_n_BASE + 11, 1000000.0/(1000./10), 0, 0},
    
    {C124_BASE + XCEAC124_CHAN_OUT_n_BASE +  0, 1000000.0/(1000./10), 0, 305},
    {C124_BASE + XCEAC124_CHAN_OUT_n_BASE +  1, 1000000.0/(1000./10), 0, 305},
    {C124_BASE + XCEAC124_CHAN_OUT_n_BASE +  2, 1000000.0/(1000./10), 0, 305},
    {C124_BASE + XCEAC124_CHAN_OUT_n_BASE +  3, 1000000.0/(1000./10), 0, 305},

#define BELIKOV_PHYS_LINE(n) \
    {BELLENS_BASE + XCAC208_CHAN_OUT_n_BASE + 0 + (n),     10000000.0/6,   0, 305},     \
    {BELLENS_BASE + XCAC208_CHAN_ADC_n_BASE + 0 + (n)*2+0, 10000000.0/6,   0, 0}, \
    {BELLENS_BASE + XCAC208_CHAN_ADC_n_BASE + 0 + (n)*2+1, 10000000.0/100, 0, 0}
    BELIKOV_PHYS_LINE(0),
    BELIKOV_PHYS_LINE(1),
    BELIKOV_PHYS_LINE(2),
    BELIKOV_PHYS_LINE(3),
    BELIKOV_PHYS_LINE(4),
    BELIKOV_PHYS_LINE(5),
    BELIKOV_PHYS_LINE(6),
    BELIKOV_PHYS_LINE(7),

    {EX_BELCHRG_BASE + XCAC208_CHAN_OUT_n_BASE + 0, 1000000.0/(25.0/10), 0, 305},
    {EX_BELCHRG_BASE + XCAC208_CHAN_OUT_n_BASE + 1, 1000000.0/(25.0/10), 0, 305},
    {EX_BELCHRG_BASE + XCAC208_CHAN_ADC_n_BASE + 0, 1000000.0/( 25./10), 0, 0},
    {EX_BELCHRG_BASE + XCAC208_CHAN_ADC_n_BASE + 1, 1000000.0/(100./10), 0, 0},
    {EX_BELCHRG_BASE + XCAC208_CHAN_ADC_n_BASE + 2, 1000000.0/( 25./10), 0, 0},
    {EX_BELCHRG_BASE + XCAC208_CHAN_ADC_n_BASE + 3, 1000000.0/(100./10), 0, 0},

    {VAC124_BASE + XCEAC124_CHAN_ADC_n_BASE + 0, 1000000.0/1, 0, 0},
    {VAC124_BASE + XCEAC124_CHAN_ADC_n_BASE + 1, 1000000.0/1000, 0, 0},
    {VAC124_BASE + XCEAC124_CHAN_ADC_n_BASE + 2, 1000000.0/1000, 0, 0},
    /* Door interlocks: "0:bad,1:ok"=>(1,0), "0:ok,1:bad"=>(-1,-1) for inversion */
    {VAC124_BASE + XCEAC124_CHAN_REGS_RD8_BASE + 0, 1, 0, 0},
    {VAC124_BASE + XCEAC124_CHAN_REGS_RD8_BASE + 1, 1, 0, 0},
    {VAC124_BASE + XCEAC124_CHAN_REGS_RD8_BASE + 2, 1, 0, 0},
    {VAC124_BASE + XCEAC124_CHAN_REGS_RD8_BASE + 3, 1, 0, 0},
