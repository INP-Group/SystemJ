#ifndef __NKSHD485_DRV_I_H
#define __NKSHD485_DRV_I_H


// r20,w80
enum
{
    NKSHD485_RD_CHAN_base = 0,
      NKSHD485_RD_CHAN_count = 20,
    NKSHD485_CHAN_DEV_VERSION       = NKSHD485_RD_CHAN_base + 0,
    NKSHD485_CHAN_DEV_SERIAL        = NKSHD485_RD_CHAN_base + 1,
    NKSHD485_CHAN_STEPS_LEFT        = NKSHD485_RD_CHAN_base + 2,
    NKSHD485_CHAN_STATUS_BYTE       = NKSHD485_RD_CHAN_base + 3,
    NKSHD485_CHAN_STATUS_base       = NKSHD485_RD_CHAN_base + 4,
    NKSHD485_CHAN_STATUS_READY        = NKSHD485_CHAN_STATUS_base + 0,
    NKSHD485_CHAN_STATUS_GOING        = NKSHD485_CHAN_STATUS_base + 1,
    NKSHD485_CHAN_STATUS_KM           = NKSHD485_CHAN_STATUS_base + 2,
    NKSHD485_CHAN_STATUS_KP           = NKSHD485_CHAN_STATUS_base + 3,
    NKSHD485_CHAN_STATUS_SENSOR       = NKSHD485_CHAN_STATUS_base + 4,
    NKSHD485_CHAN_STATUS_PREC         = NKSHD485_CHAN_STATUS_base + 5,
    NKSHD485_CHAN_STATUS_WAS_K        = NKSHD485_CHAN_STATUS_base + 6,
    NKSHD485_CHAN_STATUS_BC           = NKSHD485_CHAN_STATUS_base + 7,

    NKSHD485_WR_CHAN_base = 20,
      NKSHD485_WR_CHAN_count = 80,
    NKSHD485_CONFIG_CHAN_base       = NKSHD485_WR_CHAN_base + 0, // Note: following 4 channels go in the order of data in GET_CONFIG packet
    NKSHD485_CHAN_WORK_CURRENT        = NKSHD485_CONFIG_CHAN_base + 0,
    NKSHD485_CHAN_HOLD_CURRENT        = NKSHD485_CONFIG_CHAN_base + 1,
    NKSHD485_CHAN_HOLD_DELAY          = NKSHD485_CONFIG_CHAN_base + 2,
    NKSHD485_CHAN_CONFIG_BYTE         = NKSHD485_CONFIG_CHAN_base + 3,
    NKSHD485_SPEEDS_CHAN_base       = NKSHD485_WR_CHAN_base + 4, // Note: following 2 channels go in the order of data in GET_SPEEDS packet
    NKSHD485_CHAN_MIN_VELOCITY        = NKSHD485_SPEEDS_CHAN_base + 0,
    NKSHD485_CHAN_MAX_VELOCITY        = NKSHD485_SPEEDS_CHAN_base + 1,
    NKSHD485_CHAN_ACCELERATION        = NKSHD485_SPEEDS_CHAN_base + 2,
    NKSHD485_CHAN_NUM_STEPS         = NKSHD485_WR_CHAN_base + 7,
    NKSHD485_CHAN_STOPCOND_BYTE     = NKSHD485_WR_CHAN_base + 8,
    NKSHD485_CHAN_ABSCOORD          = NKSHD485_WR_CHAN_base + 9,

    NKSHD485_CHAN_CONFIG_BIT_base   = NKSHD485_WR_CHAN_base + 20,
    NKSHD485_CHAN_CONFIG_BIT_HALF     = NKSHD485_CHAN_CONFIG_BIT_base + 0,
    NKSHD485_CHAN_CONFIG_BIT_1        = NKSHD485_CHAN_CONFIG_BIT_base + 1,
    NKSHD485_CHAN_CONFIG_BIT_KM       = NKSHD485_CHAN_CONFIG_BIT_base + 2,
    NKSHD485_CHAN_CONFIG_BIT_KP       = NKSHD485_CHAN_CONFIG_BIT_base + 3,
    NKSHD485_CHAN_CONFIG_BIT_SENSOR   = NKSHD485_CHAN_CONFIG_BIT_base + 4,
    NKSHD485_CHAN_CONFIG_BIT_SOFTK    = NKSHD485_CHAN_CONFIG_BIT_base + 5,
    NKSHD485_CHAN_CONFIG_BIT_LEAVEK   = NKSHD485_CHAN_CONFIG_BIT_base + 6,
    NKSHD485_CHAN_CONFIG_BIT_ACCLEAVE = NKSHD485_CHAN_CONFIG_BIT_base + 7,

    NKSHD485_CHAN_STOPCOND_BIT_base = NKSHD485_WR_CHAN_base + 28,
    NKSHD485_CHAN_STOPCOND_BIT_0      = NKSHD485_CHAN_STOPCOND_BIT_base + 0,
    NKSHD485_CHAN_STOPCOND_BIT_1      = NKSHD485_CHAN_STOPCOND_BIT_base + 1,
    NKSHD485_CHAN_STOPCOND_BIT_KP     = NKSHD485_CHAN_STOPCOND_BIT_base + 2,
    NKSHD485_CHAN_STOPCOND_BIT_KM     = NKSHD485_CHAN_STOPCOND_BIT_base + 3,
    NKSHD485_CHAN_STOPCOND_BIT_S0     = NKSHD485_CHAN_STOPCOND_BIT_base + 4,
    NKSHD485_CHAN_STOPCOND_BIT_S1     = NKSHD485_CHAN_STOPCOND_BIT_base + 5,
    NKSHD485_CHAN_STOPCOND_BIT_6      = NKSHD485_CHAN_STOPCOND_BIT_base + 6,
    NKSHD485_CHAN_STOPCOND_BIT_7      = NKSHD485_CHAN_STOPCOND_BIT_base + 7,

    NKSHD485_CM_CHAN_base = 80,
    NKSHD485_CHAN_GO                = NKSHD485_CM_CHAN_base + 0,
    NKSHD485_CHAN_GO_WO_ACCEL       = NKSHD485_CM_CHAN_base + 1,
    NKSHD485_CHAN_STOP              = NKSHD485_CM_CHAN_base + 2,
    NKSHD485_CHAN_SWITCHOFF         = NKSHD485_CM_CHAN_base + 3,
    NKSHD485_CHAN_GO_N_STEPS        = NKSHD485_CM_CHAN_base + 4,
    NKSHD485_CHAN_GO_WOA_N_STEPS    = NKSHD485_CM_CHAN_base + 5,

    NKSHD485_CHAN_DO_RESET          = 98, // = NKSHD485_CM_CHAN_base + 18
    NKSHD485_CHAN_SAVE_CONFIG       = 99, // = NKSHD485_CM_CHAN_base + 19

    NKSHD485_NUMCHANS    = 100
};


#endif /* __NKSHD485_DRV_I_H */
