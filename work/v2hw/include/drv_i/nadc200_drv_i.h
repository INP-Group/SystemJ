#ifndef __NADC200_DRV_I_H
#define __NADC200_DRV_I_H


#include "misc_types.h"


enum
{
    NADC200_PARAM_SHOT,
    NADC200_PARAM_ISTART,
    NADC200_PARAM_WAITTIME,
    NADC200_PARAM_STOP,
    NADC200_PARAM_PTSOFS,
    NADC200_PARAM_NUMPTS,

    NADC200_PARAM_TIMING,
    NADC200_PARAM_FRQDIV,
    NADC200_PARAM_RANGE1,
    NADC200_PARAM_RANGE2,
    NADC200_PARAM_ZERO1,
    NADC200_PARAM_ZERO2,

    NADC200_PARAM_CALC_STATS = 18,
    NADC200_PARAM_ELAPSED    = 19,

    NADC200_PARAM_MIN1 = 50,
    NADC200_PARAM_MIN2 = 51,
    NADC200_PARAM_MAX1 = 52,
    NADC200_PARAM_MAX2 = 53,
    NADC200_PARAM_AVG1 = 54,
    NADC200_PARAM_AVG2 = 55,
    NADC200_PARAM_INT1 = 56,
    NADC200_PARAM_INT2 = 57,

    NADC200_NUM_PARAMS    = 100,
};


/* Frequency divisors */
enum
{
    NADC200_FRQD_5NS  = 0,
    NADC200_FRQD_10NS = 1,
    NADC200_FRQD_20NS = 2,
    NADC200_FRQD_40NS = 3
};

/* Timings */
enum
{
    NADC200_T_200MHZ   = 0,
    NADC200_T_195MHZ   = 1,
    NADC200_T_TIMER    = 2
};

/* Ranges */
enum
{
    NADC200_R_256  = 0,
    NADC200_R_512  = 1,
    NADC200_R_1024 = 2,
    NADC200_R_2048 = 3,
};

/* General device specs */
typedef uint8 NADC200_DATUM_T;
enum
{
    NADC200_MAX_NUMPTS = 128000,
    NADC200_NUM_LINES  = 2,
    NADC200_DATAUNITS  = sizeof(NADC200_DATUM_T),
};
enum
{
    NADC200_MIN_VALUE = 0,
    NADC200_MAX_VALUE = 255,
};


#endif /* __NADC200_DRV_I_H */
